
action arch_newentry
{
	text		= "New Entry";
	icon		= "newentry";
	help_text	= "Create a new empty entry";
	keybind		= "el_new";
}

action arch_newdir
{
	text		= "New Directory";
	icon		= "newfolder";
	help_text	= "Create a new empty directory";
}

action arch_importfiles
{
	text		= "&Import Files";
	icon		= "importfiles";
	help_text	= "Import multiple files into the archive";
	keybind		= "el_import_files";
}

action arch_importdir
{
	text		= "Import Directory";
	icon		= "importdir";
	help_text	= "Import a directory and all its contents into the archive";
	keybind		= "el_import_dir";
}

action arch_buildarchive
{
	text		= "&Build Archive";
	icon		= "buildarchive";
	help_text	= "Build archive from the current directory";
}

action arch_texeditor
{
	text		= "&Texture Editor";
	icon		= "texeditor";
	help_text	= "Open the texture editor for the current archive";
}

action arch_mapeditor
{
	text		= "&Map Editor";
	icon		= "mapeditor";
	help_text	= "Open the map editor";
}

action arch_clean_patches
{
	text		= "Remove Unused &Patches";
	help_text	= "Remove any unused patches, and their associated entries";
}

action arch_clean_textures
{
	text		= "Remove Unused &Textures";
	help_text	= "Remove any unused textures";
}

action arch_clean_flats
{
	text		= "Remove Unused &Flats";
	help_text	= "Remove any unused flats";
}

action arch_clean_zdoom_textures
{
	text		= "Remove Unused &ZDoom Textures";
	help_text	= "Remove any unused textures, flats, and patches in a ZDoom archive.";
}

action arch_check_zdoom_texture_duplicates
{
    text        = "Check Duplicate &ZDoom Texture Entry Names";
    help_text    = "Checks the archive for any duplicate textures/flats/texture definitions in a ZDoom archive.";
}

action arch_check_zdoom_patch_duplicates
{
    text        = "Check Duplicate &ZDoom Patch Entry Names";
    help_text    = "Checks the archive for any duplicate patches and patch table entries in a ZDoom archive.";
}

action arch_check_duplicates
{
	text		= "Check Duplicate Entry Names";
	help_text	= "Checks the archive for any entries sharing the same name";
}

action arch_check_duplicates2
{
	text		= "Check Duplicate Entry Content";
	help_text	= "Checks the archive for any entries sharing the same data";
}

action arch_clean_iwaddupes
{
	text		= "Remove Entries Duplicated from IWAD";
	help_text	= "Remove entries that are exact duplicates of entries from the base resource archive";
}

action arch_check_iwadoverrides
{
	text		= "Check Entries Overridden from IWAD";
	help_text	= "Checks entries of the same name from the base resource archive. Also checks texture definitions. This helps know what your archive overrides.";
}

action arch_check_zdoomiwadtexoverrides
{
	text		= "Check ZDoom Texture Entries Overridden from IWAD";
	help_text	= "This finds what Zdoom textures your archive overrides from the iwad. Since this is for zdoom, it checks across flats, patches, and other assets. The Check Entries Overridden from IWAD tool checks general overrides.";
}

action arch_replace_maps
{
	text		= "Replace in Maps";
	help_text	= "Tool to find and replace thing types, specials and textures in all maps";
}

action arch_entry_save
{
	text		= "Save";
	icon		= "save";
	help_text	= "Save any changes to the current entry";
	shortcut	= "Ctrl+Alt+S";
}

action arch_entry_rename
{
	text		= "Rename";
	icon		= "rename";
	help_text	= "Rename the selected entries";
	keybind		= "el_rename";
}

action arch_entry_rename_each
{
	text		= "Rename Each";
	icon		= "renameeach";
	help_text	= "Rename separately all the selected entries";
}

action arch_entry_delete
{
	text		= "Delete";
	icon		= "delete";
	help_text	= "Delete the selected entries";
}

action arch_entry_revert
{
	text		= "Revert";
	icon		= "revert";
	help_text	= "Revert any modifications made to the selected entries since the last save";
}

action arch_entry_cut
{
	text		= "Cut";
	icon		= "cut";
	help_text	= "Cut the selected entries";
}

action arch_entry_copy
{
	text		= "Copy";
	icon		= "copy";
	help_text	= "Copy the selected entries";
}

action arch_entry_paste
{
	text		= "Paste";
	icon		= "paste";
	help_text	= "Paste the previously copied entries";
}

action arch_entry_moveup
{
	text		= "Move Up";
	icon		= "up";
	help_text	= "Move the selected entries up";
	keybind		= "el_move_up";
}

action arch_entry_movedown
{
	text		= "Move Down";
	icon		= "down";
	help_text	= "Move the selected entries down";
	keybind		= "el_move_down";
}

action arch_entry_sort
{
	text		= "Sort";
	icon		= "sort", "down";
	help_text	= "Sort the selected entries in the list, or all entries if only one is selected";
}

action arch_entry_import
{
	text		= "Import";
	icon		= "import";
	help_text	= "Import a file to the selected entry";
	keybind		= "el_import";
}

action arch_entry_export
{
	text		= "Export";
	icon		= "export";
	help_text	= "Export the selected entries to files";
	keybind		= "el_export";
}

action arch_entry_bookmark
{
	text		= "Toggle Bookmark";
	icon		= "bookmark";
	help_text	= "Toggle bookmark on the current entry";
	keybind		= "el_bookmark";
}

action arch_entry_opentab
{
	text		= "In New Tab";
	help_text	= "Open selected entries in separate tabs";
}

action arch_entry_crc32
{
	text		= "Compute CRC-32 Checksum";
	icon		= "text";
	help_text	= "Compute the CRC-32 checksums of the selected entries";
}

action arch_entry_openext
{
	reserve_ids	= 20;
}

action arch_entry_setup_external
{
	text		= "Setup External Editors";
	icon		= "settings";
	help_text	= "Open the preferences dialog to set up external editors";
}

action arch_bas_convertb
{
	text		= "Convert to SWANTBLS";
	help_text	= "Convert any selected SWITCHES and ANIMATED entries to a single SWANTBLS entry";
}

action arch_bas_convertz
{
	text		= "Convert to ANIMDEFS";
	help_text	= "Convert any selected SWITCHES and ANIMATED entries to a single ANIMDEFS entry";
}

action arch_swan_convert
{
	text		= "Compile to SWITCHES and ANIMATED";
	help_text	= "Convert SWANTBLS entries into SWITCHES and ANIMATED entries";
}

action arch_texturex_convertzd
{
	text		= "Convert to TEXTURES";
	help_text	= "Convert any selected TEXTUREx entries to ZDoom TEXTURES format";
}

action arch_texturex_finderrors
{
	text		= "Find Texture Errors";
	help_text	= "Log to the console any error detected in the TEXTUREx entries";
}

action arch_texture_clean_iwaddupes
{
	text		= "Remove Texture Entries Duplicated from IWAD";
	help_text	= "Remove Texture entries that are exact duplicates of entries from the base resource archive";
}

action arch_zdtextures_clean_singlepatch
{
	text		= "Clean ZDoom Single Patch Textures";
	help_text	= "Removes ZDoom TEXTURES entries that are just a single patch";
}

action arch_view_text
{
	text		= "View as Text";
	icon		= "text";
	help_text	= "Open the selected entry in the text editor, regardless of type";
}

action arch_view_hex
{
	text		= "View as Hex";
	icon		= "data";
	help_text	= "Open the selected entry in the hex editor, regardless of type";
}

action arch_gfx_convert
{
	text		= "Convert to...";
	icon		= "convert";
	help_text	= "Open the Gfx Conversion Dialog for any selected gfx entries";
}

action arch_gfx_translate
{
	text		= "Colour Remap...";
	icon		= "remap";
	help_text	= "Remap a range of colours in the selected gfx entries to another range (paletted gfx only)";
}

action arch_gfx_colourise
{
	text		= "Colourise";
	icon		= "colourise";
	help_text	= "Colourise the selected gfx entries";
}

action arch_gfx_tint
{
	text		= "Tint";
	icon		= "tint";
	help_text	= "Tint the selected gfx entries by a colour/amount";
}

action arch_gfx_offsets
{
	text		= "Modify Gfx Offsets";
	icon		= "offset";
	help_text	= "Mass-modify the offsets for any selected gfx entries";
}

action arch_gfx_addptable
{
	text		= "Add to Patch Table";
	icon		= "pnames";
	help_text	= "Add selected gfx entries to PNAMES";
}

action arch_gfx_addtexturex
{
	text		= "Add to TEXTUREx";
	icon		= "texturex";
	help_text	= "Create textures from selected gfx entries and add them to TEXTUREx";
}

action arch_gfx_exportpng
{
	text		= "Export as PNG";
	icon		= "export";
	help_text	= "Export selected gfx entries to PNG format files";
}

action arch_gfx_pngopt
{
	text		= "Optimize PNG";
	icon		= "pngopt";
	help_text	= "Optimize PNG entries";
}

action arch_audio_convertwd
{
	text		= "Convert WAV to Doom Sound";
	icon		= "convert";
	help_text	= "Convert any selected WAV format entries to Doom Sound format";
}

action arch_audio_convertdw
{
	text		= "Convert Doom Sound to WAV";
	icon		= "convert";
	help_text	= "Convert any selected Doom Sound format entries to WAV format";
}

action arch_audio_convertmus
{
	text		= "Convert MUS to MIDI";
	icon		= "convert";
	help_text	= "Convert any selected MUS format entries to MIDI format";
}

action arch_scripts_compiledecohack
{
	text		= "Compile DECOHack";
	icon		= "compile";
	help_text	= "Compile any selected DECOHack text entries to DeHackEd";
}

action arch_scripts_compileacs
{
	text		= "Compile ACS";
	icon		= "compile";
	help_text	= "Compile any selected text entries to ACS bytecode";
}

action arch_scripts_compilehacs
{
	text		= "Compile ACS (Hexen bytecode)";
	icon		= "compile";
	help_text	= "Compile any selected text entries to Hexen-compatible ACS bytecode";
}

action arch_map_opendb2
{
	text		= "Open Map in Doom Builder 2";
	help_text	= "Open the selected map in Doom Builder 2";
}

action arch_run
{
	text		= "Run Archive";
	icon		= "run";
	help_text	= "Run the current archive";
	shortcut	= "Ctrl+Shift+R";
}

action arch_script
{
	reserve_ids	= 100;
}

action arch_entry_script
{
	reserve_ids = 100;
}

action arch_elist_updir
{
	text		= "Up Directory";
	icon		= "upfolder";
	help_text	= "Go up to the parent directory";
	keybind		= "el_up_dir";
}

action arch_elist_homedir
{
	text		= "Home";
	icon		= "homefolder";
	help_text	= "Go up to the home (root) directory";
}

action arch_elist_togglefilter
{
	text		= "Toggle Filter Controls";
	icon		= "filter";
	help_text	= "Toggle the list filtering controls";
	type		= check;
	linked_cvar	= elist_show_filter;
}

action arch_elist_collapseall
{
	text		= "Collapse All";
	icon		= "collapseall";
	help_text	= "Collapse all expanded directories";
}
